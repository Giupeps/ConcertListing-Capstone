@model ConcertListing_Capstone.Models.Utenti

@{
    ViewBag.Title = "Login";
}


@{
    if (TempData["RegistrazioneOk"] != null)
    {
        string messaggio = TempData["RegistrazioneOk"].ToString();

        <div class="alert alert-success">
            @messaggio
        </div>
    }
    else
    {
        <div></div>
    }
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="login form-horizontal w-25 mx-auto d-flex flex-column align-items-center">
    <h2>Login</h2>
    <i class="bi bi-people"></i>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group text-center mx-auto w-100">
        <div class="col-md-10 w-100 mx-auto  my-4">
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", placeholder = "inserisci l'username" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group w-100">
        <div class="col-md-10 w-100 mx-auto mb-4">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Inserisci la password", type = "password" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group text-center login-button">
        <div class="col-md-offset-2 col-md-10  mx-auto">
            <input type="submit" value="Entra" class="personal-button mb-4 mt-2" />
        </div>
    </div>
    <div class="text-center">
        Non sei ancora registrato?
        @Html.ActionLink("Registrati", "Register")
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
